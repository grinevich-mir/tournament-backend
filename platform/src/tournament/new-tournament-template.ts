import { Region } from '../core';
import { TournamentType } from './tournament-type';
import { TournamentLeaderboardMode } from './tournament-leaderboard-mode';
import { LeaderboardPointConfig } from '../leaderboard';
import { PowerupType } from '../powerup';
import { TournamentMetadata } from './tournament-metadata';
import { TournamentTemplateGameAssignment } from './tournament-template-game-assignment';
import { TournamentGameSelectionType } from './tournament-game-selection-type';
import { TournamentLeaderboardPointMode } from './tournament-leaderboard-point-mode';
import { RankedPrize } from '../prize';
import { JackpotTrigger } from '../jackpot';
import { TournamentRuntimeType } from './tournament-runtime-type';

export interface NewTournamentTemplate {
    name: string;
    description: string;
    group?: string;
    tags?: string[];
    rules?: string;
    region: Region;
    type: TournamentType;
    runtime: TournamentRuntimeType;
    displayPriority: number;
    bannerImgUrl: string;
    skins: string[];
    currencyCode: string;
    prizeTotal?: number;
    minPlayers: number;
    maxPlayers: number;
    autoPayout: boolean;
    public: boolean;
    leaderboardMode: TournamentLeaderboardMode;
    leaderboardPointConfig?: LeaderboardPointConfig;
    leaderboardPointMode: TournamentLeaderboardPointMode;
    chatEnabled: boolean;
    chatChannel?: string;
    durationMins?: number;
    nameColour?: string;
    gameColour?: string;
    allowedPowerups: PowerupType[];
    allowJoinAfterStart: boolean;
    entryCosts: number[];
    entryAllocationRounds?: number;
    entryAllocationCredit?: number;
    maxEntryAllocations?: number;
    metadata?: TournamentMetadata;
    minLevel: number;
    maxLevel?: number;
    enabled: boolean;
    gameAssignments: TournamentTemplateGameAssignment[];
    cronPattern?: string;
    gameSelectionType: TournamentGameSelectionType;
    prizes: RankedPrize[];
    entryCutOff: number;
    jackpotTriggers?: JackpotTrigger[];
    contributionGroups?: string[];
    introId?: number;
}