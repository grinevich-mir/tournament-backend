service:
  name: system-referral
  enabled: ${self:custom.brand.features.referrals, "true"}

plugins:
  - serverless-plugin-enabled
  - serverless-webpack
  - serverless-plugin-scripts
  - serverless-plugin-warmup
  - serverless-step-functions

provider:
  versionFunctions: false
  name: aws
  runtime: nodejs14.x
  memorySize: ${self:custom.common.provider.memorySize}
  timeout: 30
  region: ${opt:region, "${self:custom.common.defaultRegion}"}
  stage: ${opt:stage}
  logRetentionInDays: ${self:custom.common.logRetention}
  iamRoleStatements: ${file(../serverless/iam-role.yml):statements}
  environment: ${file(../../serverless/environment.yml)}
  profile: ${self:custom.common.aws.profile}
  usagePlan: ${self:custom.common.provider.usagePlan}
  vpc: ${self:custom.common.provider.vpc}

custom:
  brand: ${file(../../brands.json):${opt:brand}}
  common: ${file(../../serverless/common.yml)}
  webpack:
    includeModules: true
  scripts:
    hooks:
      "package:initialize": yarn build
  warmup: ${self:custom.common.warmup}

functions:
  onUserCreated:
    handler: src/handlers.onUserCreated
    events:
      - sns:
          arn: arn:aws:sns:${self:provider.region}:${self:custom.common.aws.accountId}:platform-event
          displayName: "Platform Event Topic"
          filterPolicy:
            EventType:
              - User:Created
    timeout: 600
    environment:
      FUNCTION: onUserCreated

  onUserUpdated:
    handler: src/handlers.onUserUpdated
    events:
      - sns:
          arn: arn:aws:sns:${self:provider.region}:${self:custom.common.aws.accountId}:platform-event
          displayName: "Platform Event Topic"
          filterPolicy:
            EventType:
              - User:Updated
    timeout: 600
    environment:
      FUNCTION: onUserUpdated

  # onUserLevelChanged:
  #   handler: src/handlers.onUserLevelChanged
  #   events:
  #     - sns:
  #         arn: arn:aws:sns:${self:provider.region}:${self:custom.common.aws.accountId}:platform-event
  #         displayName: "Platform Event Topic"
  #         filterPolicy:
  #           EventType:
  #             - User:LevelChanged
  #   timeout: 600
  #   environment:
  #     FUNCTION: onUserLevelChanged

  onPaymentStatusChanged:
    handler: src/handlers.onPaymentStatusChanged
    events:
      - sns:
          arn: arn:aws:sns:${self:provider.region}:${self:custom.common.aws.accountId}:platform-event
          displayName: "Platform Event Topic"
          filterPolicy:
            EventType:
              - Payment:StatusChanged
            To:
              - Successful
    timeout: 600
    environment:
      FUNCTION: onPaymentStatusChanged


  createReferralUsers:
    handler: src/handlers.createReferralUsers
    timeout: 600
    warmup: false
    environment:
      FUNCTION: createReferralUsers